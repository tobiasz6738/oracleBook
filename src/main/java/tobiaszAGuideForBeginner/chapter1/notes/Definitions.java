package tobiaszAGuideForBeginner.chapter1.notes;

public class Definitions {
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*[unit test]

JUnit to test jednostkowy, który docelowo sprawdzaja, czy dana funkcjonalność działa zgodnie z jej przeznaczeniem.
    Dobrą praktyką jest dzielenie JUnitów, tak aby testowały one tylko wybraną metodę lub funkcjonalność, zaczynając
    od tych najprostszych, do coraz bardziej zaawansowanych..

Zaletą testów jednostkowych jest możliwość wykonywania na bieżąco w pełni zautomatyzowanych testów
    na modyfikowanych elementach programu, co umożliwia często wychwycenie błędu natychmiast po jego pojawieniu
    się i szybką jego lokalizację zanim dojdzie do wprowadzenia błędnego fragmentu do programu. Testy jednostkowe
    są również formą specyfikacji. Z powyższych powodów są szczególnie popularne w programowaniu ekstremalnym.

 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*[JUnit]

JUnit – narzędzie służące do tworzenia powtarzalnych testów jednostkowych oprogramowania pisanego w języku Java.

Cechy JUnit:
    - metoda najmniejszą jednostką testowania,
    - przypadki testowe,
    - oddzielenie testów od kodu,
    - wiele mechanizmów uruchamiania,
    - tworzenie raportów,
    - integracja z różnymi środowiskami programistycznymi.


 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*[JUnit - English]

Example of JUnit test fixture
    Test methods
    must be annotated by the @Test annotation. If the situation requires it, it is also possible
    to define a method to execute before (or after) each (or all) of the test methods with the
    @Before (or @After) and @BeforeClass (or @AfterClass) annotations.

 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*



 */
